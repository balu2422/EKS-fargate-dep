name: EKS Fargate Apply/Destroy

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform (apply or destroy)'
        required: true
        default: 'apply'
      cluster_name:
        description: 'EKS Cluster Name (created from Terraform)'
        required: true
        default: 'eks-cluster'

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: ${{ github.event.inputs.cluster_name }}

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::557548602903:role/mytestrole-OIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Update kubeconfig for EKS Cluster
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME

      - name: Deploy or Destroy Kubernetes Resources
        run: |
          if [[ "${{ github.event.inputs.action }}" == "apply" ]]; then
            echo "üöÄ Applying Kubernetes manifests..."
            kubectl apply -f app/k8s/deployment-appointment.yaml
            kubectl apply -f app/k8s/service-appointment.yaml
            kubectl apply -f app/k8s/deployment-patient.yaml
            kubectl apply -f app/k8s/service-patient.yaml
            kubectl apply -f app/k8s/ingress.yaml
            echo "‚úÖ Apply completed!"
          elif [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            echo "üî• Destroying Kubernetes resources..."
            kubectl delete -f app/k8s/ingress.yaml --ignore-not-found
            kubectl delete -f app/k8s/service-patient.yaml --ignore-not-found
            kubectl delete -f app/k8s/deployment-patient.yaml --ignore-not-found
            kubectl delete -f app/k8s/service-appointment.yaml --ignore-not-found
            kubectl delete -f app/k8s/deployment-appointment.yaml --ignore-not-found
            echo "üóëÔ∏è Destroy completed."
          else
            echo "‚ùå Invalid mode selected."
            exit 1
          fi
